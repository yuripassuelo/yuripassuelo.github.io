% Funcao distribuicao Invariante

function [stationary_dist_k, stationary_dist_l] = compute_invariant_dist(gk, pi, M, N, L, k_grid, l_grid )

    % Loop que preenche matrizes Para Capital
    for k = 1:M
        Ai = zeros( N );
        for i = 1:N
            for j = 1:N
                Ai(i,j) = gk(i,k) == k_grid(j);
            end
        end
        eval( ['A' num2str(k) ' =  Ai ;']);
    end
    % Loop que preeche mastrizes para Trabalho
    for k = 1:M
        Bi = zeros( N );
        for i = 1:L
            for j = 1:L
                Bi(i,j) = gl(i,k) == l_grid(j);
            end
        end
        eval( ['B' num2str(k) ' =  Bi ;']);
    end

    % Criando matriz M:
    C = cell( M );
    D = cell( M );

    % Preenchimento
    for row = 1:M
        for col = 1:M
            C{row,col} = pi(row,col) .* eval(['A' num2str(row)]);
            D{row,col} = pi(row,col) .* eval(['B' num2str(row)]);
        end
    end


    % Convers√£o para matriz
    SS = cell2mat( C );
    
    stationary_dist = SS^1000;
    stationary_dist = stationary_dist(1,:);
    stationary_dist = reshape( stationary_dist,N,M ); % [stationary_dist(1:N)',stationary_dist(N+1:end)'];

    SS2 = cell2mat( D );

end